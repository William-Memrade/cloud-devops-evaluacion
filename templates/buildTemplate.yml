# buildTemplate.yml
parameters:
- name: IMAGE_NAME
  default: 'app_hola_mundo'

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build_Job
    displayName: 'Build Job'
    steps:
    - script: |
        sudo apt-get update -y
        sudo apt-get install openjdk-11-jdk -y
        sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java

        echo "##vso[task.setvariable variable=JAVA_HOME]/usr/lib/jvm/java-11-openjdk-amd64"
        echo "##vso[task.setvariable variable=JAVA_HOME_11_X64]/usr/lib/jvm/java-11-openjdk-amd64"
        echo "##vso[task.setvariable variable=PATH]${PATH}:/usr/lib/jvm/java-11-openjdk-amd64/bin"
      displayName: 'Install java 11'

    - task: Maven@3
      inputs:
        mavenPomFile: 'microservicio-evaluacion-backend/pom.xml'
        goals: 'package'
        options: '-DskipTests'

    - script: |
        mkdir -p docker-context
        cp microservicio-evaluacion-backend/target/microservicio-evaluacion-backend-1.0-SNAPSHOT.jar docker-context
        cp microservicio-evaluacion-backend/Dockerfile docker-context
      displayName: 'Create docker folder'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'docker-context'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: BuildDockerImage
  displayName: 'Build Docker Image Stage'
  dependsOn: [Build]
  jobs:
  - job: BuildDockerImage_Job
    displayName: 'Build Docker Image Job'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - script: |
        echo "[INFO] docker build -t ${{ parameters.IMAGE_NAME }} -f $(System.ArtifactsDirectory)/drop/Dockerfile $(System.ArtifactsDirectory)/drop"
        docker build -t ${{ parameters.IMAGE_NAME }} -f $(System.ArtifactsDirectory)/drop/Dockerfile $(System.ArtifactsDirectory)/drop
        docker save ${{ parameters.IMAGE_NAME }} -o $(Build.ArtifactStagingDirectory)/${{ parameters.IMAGE_NAME }}.tar.gz
      displayName: 'Build Docker Image'
    
    - script: |
        ls -la $(System.ArtifactsDirectory)
      displayName: 'Verify files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/${{ parameters.IMAGE_NAME }}.tar.gz'
        ArtifactName: 'docker-image'
        publishLocation: 'Container'
    
    - task: UniversalPackages@0
      displayName: 'PublishReleaseArtifact'
      inputs:
        command: 'publish'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        vstsFeedPublish: 'ghernandez/snapshot'
        vstsFeedPackagePublish: '$(Build.Repository.Name)'
        packagePublishDescription: 'Release $(Build.Repository.Name) in snapshot'